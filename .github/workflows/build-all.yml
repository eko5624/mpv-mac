name: Build All-in-One-MPV
on:
  #schedule:
  #  - cron: '10 0 * * MON'
    
  workflow_dispatch:
    inputs:   
      os:
        description: "Support cross-compile for arm64/x86_64 arch"
        required: false
        default: "macos-14"
        type: choice
        options:
        - macos-13
        - macos-14
      arch:
        description: "Build target"
        required: false
        default: "x86_64"
        type: choice
        options:
        - x86_64
        - arm64

jobs:
  aribb24:
    needs: [libpng]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:    
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/aribb24.sh
        ./scripts/aribb24.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: aribb24*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: aribb24.tar.xz

  brotli:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/brotli.sh
        ./scripts/brotli.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: brotli*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: brotli.tar.xz

  bzip2:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer    
    - name: Build
      run: |
        chmod +x ./scripts/bzip2.sh
        ./scripts/bzip2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: bzip2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: bzip2.tar.xz

  dav1d:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
    - name: Build
      run: |
        chmod +x ./scripts/dav1d.sh
        ./scripts/dav1d.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: dav1d*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: dav1d.tar.xz

  davs2:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/davs2.sh
        ./scripts/davs2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: davs2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: davs2.tar.xz

  expat:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/expat.sh
        ./scripts/expat.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: expat*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: expat.tar.xz

  ffmpeg:
    needs: [aribb24, dav1d, davs2, frei0r, lame, libaribcaption, libass, libbluray, libdvdnav, libbs2b, libcaca, libjxl, libmodplug, libmysofa, libplacebo, libsdl, libssh, libtheora, libvpx, libwebp, libX11, opencore, rubberband, snappy, soxr, speex, srt, svt-av1, uavs3d, vvdec, x264, x265, xvid, zimg, zvbi]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/aribb24.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/brotli.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/dav1d.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/davs2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fontconfig.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/frei0r.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fribidi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/giflib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/harfbuzz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/highway.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lame.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lcms2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libaribcaption.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libass.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libbluray.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libbs2b.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libcaca.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdovi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdcss.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdread.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdnav.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjxl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libmodplug.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libmysofa.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libplacebo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libsamplerate.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libsdl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libssh.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtheora.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libunibreak.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libvorbis.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libvpx.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libwebp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/mbedtls.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/opencore.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/openssl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/opus.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/rubberband.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/shaderc.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/snappy.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/soxr.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/speex.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/srt.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/svt-av1.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/uavs3d.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/vulkan.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/vvdec.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/x264.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/x265.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xvid.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zimg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zvbi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libX11.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXau.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXdmcp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxcb.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xtrans.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xcb-proto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/ffmpeg.sh
        ./scripts/ffmpeg.sh
    - name: Collecting logs
      if: always()
      run: |
        mkdir _logs
        cp -fr $(find packages/FFmpeg -type f -name "*.log") _logs || true
        7z a logs.7z _logs
    - name: Uploading logs
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: logs
        path: logs.7z
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: ffmpeg*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: ffmpeg.tar.xz

  fontconfig:
    needs: [expat, freetype2, gettext]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/fontconfig.sh
        ./scripts/fontconfig.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: fontconfig*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: fontconfig.tar.xz
        
  freetype2:
    needs: [bzip2, libpng]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/freetype2.sh
        ./scripts/freetype2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: freetype2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: freetype2.tar.xz

  frei0r:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/frei0r.sh
        ./scripts/frei0r.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: frei0r*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: frei0r.tar.xz

  fribidi:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/fribidi.sh
        ./scripts/fribidi.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: fribidi*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: fribidi.tar.xz

  gettext:
    needs: [libiconv, libxml2]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/gettext.sh
        ./scripts/gettext.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: gettext*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: gettext.tar.xz

  giflib:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/giflib.sh
        ./scripts/giflib.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: giflib*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: giflib.tar.xz

  harfbuzz:
    needs: [freetype2]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer     
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz       
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/harfbuzz.sh
        ./scripts/harfbuzz.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: harfbuzz*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: harfbuzz.tar.xz

  highway:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/highway.sh
        ./scripts/highway.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: highway*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: highway.tar.xz

  lame:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/lame.sh
        ./scripts/lame.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: lame*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: lame.tar.xz

  lcms2:
    needs: [libjpeg-turbo, libtiff, zstd]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz    
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/lcms2.sh
        ./scripts/lcms2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: lcms2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: lcms2.tar.xz

  libarchive:
    needs: [bzip2, expat, libb2, lz4, xz, zstd]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libb2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libarchive.sh
        ./scripts/libarchive.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libarchive*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libarchive.tar.xz

  libaribcaption:
    needs: [fontconfig, openssl]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fontconfig.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/openssl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libaribcaption.sh
        ./scripts/libaribcaption.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libaribcaption*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libaribcaption.tar.xz

  libass:
    needs: [freetype2, fribidi, harfbuzz, libiconv, libunibreak]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fribidi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/harfbuzz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libunibreak.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libass.sh
        ./scripts/libass.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libass*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libass.tar.xz

  libb2:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libb2.sh
        ./scripts/libb2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libb2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libb2.tar.xz
  
  libbluray:
    needs: [fontconfig]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fontconfig.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libbluray.sh
        ./scripts/libbluray.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libbluray*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libbluray.tar.xz

  libbs2b:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libbs2b.sh
        ./scripts/libbs2b.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libbs2b*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libbs2b.tar.xz

  libcaca:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libcaca.sh
        ./scripts/libcaca.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libcaca*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libcaca.tar.xz

  libdovi:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libdovi.sh
        ./scripts/libdovi.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libdovi*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libdovi.tar.xz

  libdvdcss:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
    - name: Build
      run: |
        chmod +x ./scripts/libdvdcss.sh
        ./scripts/libdvdcss.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libdvdcss*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libdvdcss.tar.xz

  libdvdread:
    needs: [libdvdcss]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdcss.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libdvdread.sh
        ./scripts/libdvdread.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libdvdread*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libdvdread.tar.xz

  libdvdnav:
    needs: [libdvdread]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdcss.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdread.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libdvdnav.sh
        ./scripts/libdvdnav.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libdvdnav*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libdvdnav.tar.xz

  libiconv:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libiconv.sh
        ./scripts/libiconv.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libiconv*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libiconv.tar.xz

  libjpeg-turbo:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libjpeg-turbo.sh
        ./scripts/libjpeg-turbo.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libjpeg-turbo*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libjpeg-turbo.tar.xz

  libjxl:
    needs: [brotli, giflib, highway, libjpeg-turbo, libpng, lcms2]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/brotli.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/giflib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/highway.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lcms2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libjxl.sh
        ./scripts/libjxl.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libjxl*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libjxl.tar.xz

  libmodplug:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libmodplug.sh
        ./scripts/libmodplug.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libmodplug*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libmodplug.tar.xz

  libmysofa:
    needs: [zlib]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libmysofa.sh
        ./scripts/libmysofa.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libmysofa*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libmysofa.tar.xz

  libogg:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libogg.sh
        ./scripts/libogg.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libogg*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libogg.tar.xz

  libplacebo:
    needs: [lcms2, shaderc, vulkan]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer   
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lcms2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdovi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/shaderc.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/vulkan.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libplacebo.sh
        ./scripts/libplacebo.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libplacebo*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libplacebo.tar.xz

  libpng:
    needs: [zlib]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libpng.sh
        ./scripts/libpng.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libpng*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libpng.tar.xz

  libsamplerate:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libsamplerate.sh
        ./scripts/libsamplerate.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libsamplerate*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libsamplerate.tar.xz

  libsdl:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libsdl.sh
        ./scripts/libsdl.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libsdl*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libsdl.tar.xz

  libssh:
    needs: [openssl]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/openssl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libssh.sh
        ./scripts/libssh.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libssh*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libssh.tar.xz

  libtheora:
    needs: [libogg, libvorbis]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libvorbis.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libtheora.sh
        ./scripts/libtheora.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libtheora*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libtheora.tar.xz

  libtiff:
    needs: [libjpeg-turbo, xz, zstd]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libtiff.sh
        ./scripts/libtiff.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libtiff*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libtiff.tar.xz

  libunibreak:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libunibreak.sh
        ./scripts/libunibreak.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libunibreak*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libunibreak.tar.xz

  libvorbis:
    needs: [libogg]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        mkdir workspace
        tar xvf libogg.tar.xz -C workspace 2>/dev/null >/dev/null
        chmod +x ./scripts/libvorbis.sh
        ./scripts/libvorbis.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libvorbis*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libvorbis.tar.xz

  libvpx:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/libvpx.sh
        ./scripts/libvpx.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libvpx*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libvpx.tar.xz

  libwebp:
    needs: [giflib, libjpeg-turbo, libpng, libtiff]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/giflib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libwebp.sh
        ./scripts/libwebp.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libwebp*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libwebp.tar.xz

  libX11:
    needs: [util-macros, xtrans, libxcb, xorgproto]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXau.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXdmcp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxcb.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xtrans.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xcb-proto.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libX11.sh
        ./scripts/libX11.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libX11*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libX11.tar.xz

  libXau:
    needs: [util-macros, xorgproto]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libXau.sh
        ./scripts/libXau.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libXau*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libXau.tar.xz

  libxcb:
    needs: [libXau, libXdmcp, xcb-proto]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer     
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXau.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXdmcp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xcb-proto.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libxcb.sh
        ./scripts/libxcb.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libxcb*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libxcb.tar.xz

  libXdmcp:
    needs: [xorgproto]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libXdmcp.sh
        ./scripts/libXdmcp.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libXdmcp*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libXdmcp.tar.xz

  libxml2:
    needs: [libiconv, zlib]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/libxml2.sh
        ./scripts/libxml2.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: libxml2*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: libxml2.tar.xz

  luajit:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/luajit.sh
        ./scripts/luajit.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: luajit*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: luajit.tar.xz

  lz4:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/lz4.sh
        ./scripts/lz4.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: lz4*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: lz4.tar.xz

  mbedtls:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/mbedtls.sh
        ./scripts/mbedtls.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: mbedtls*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: mbedtls.tar.xz

  molten-vk:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/molten-vk.sh
        ./scripts/molten-vk.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: molten-vk*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: molten-vk.tar.xz

  mpv:
    needs: [ffmpeg, libarchive, luajit, molten-vk, mujs, uchardet]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/aribb24.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/brotli.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/bzip2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/dav1d.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/davs2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/expat.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fontconfig.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/freetype2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/frei0r.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/fribidi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/giflib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/harfbuzz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/highway.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lame.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lcms2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libaribcaption.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libass.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libbluray.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libbs2b.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libcaca.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdovi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdcss.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdread.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libdvdnav.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjpeg-turbo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libjxl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libmodplug.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libmysofa.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libplacebo.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libsamplerate.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libsdl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libssh.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtheora.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libtiff.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libunibreak.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libvorbis.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libvpx.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libwebp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/mbedtls.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/opencore.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/openssl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/opus.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/rubberband.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/shaderc.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/snappy.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/soxr.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/speex.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/srt.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/svt-av1.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/uavs3d.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/vulkan.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/vvdec.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/x264.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/x265.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xvid.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zimg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zstd.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zvbi.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libX11.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXau.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libXdmcp.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxcb.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xtrans.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xcb-proto.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/ffmpeg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libarchive.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libb2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/luajit.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/molten-vk.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/mujs.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/uchardet.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/mpv.sh
        ./scripts/mpv.sh
    - name: Get current timestamp
      run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_ENV
    - name: Get mpv short sha
      run: |
        echo "sha=$(cat packages/mpv/build/SHORT_SHA)" >> $GITHUB_ENV
    - name: "Generate release note"
      id: note
      uses: actions/github-script@v7
      with:
        script: |
          const sha = `${{ env.sha }}`;
          let note = `Bump to mpv-player/mpv@${sha}\n`;
          note+="**System Requirements**: macOS 11 or later\n";
          note+="**Add vulkan support by setting**: `vo=gpu gpu-context=macvk`";
          core.setOutput("note", note);
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.date }}
        name: ${{ env.date }}
        body: ${{ steps.note.outputs.note }}
        files: |
          mpv*.zip
          libmpv*.zip
          ffmpeg*.zip

  mujs:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/mujs.sh
        ./scripts/mujs.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: mujs*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: mujs.tar.xz

  opencore:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/opencore.sh
        ./scripts/opencore.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: opencore*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: opencore.tar.xz

  openssl:
    needs: [zlib]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/openssl.sh
        ./scripts/openssl.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: openssl*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: openssl.tar.xz

  opus:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/opus.sh
        ./scripts/opus.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: opus*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: opus.tar.xz

  rubberband:
    needs: [libsamplerate]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libsamplerate.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/rubberband.sh
        ./scripts/rubberband.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: rubberband*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: rubberband.tar.xz

  shaderc:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/shaderc.sh
        ./scripts/shaderc.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: shaderc*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: shaderc.tar.xz

  snappy:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/snappy.sh
        ./scripts/snappy.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: snappy*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: snappy.tar.xz

  soxr:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/soxr.sh
        ./scripts/soxr.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: soxr*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: soxr.tar.xz

  speex:
    needs: [libogg]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libogg.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/speex.sh
        ./scripts/speex.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: speex*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: speex.tar.xz

  srt:
    needs: [openssl]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/openssl.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/srt.sh
        ./scripts/srt.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: srt*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: srt.tar.xz

  svt-av1:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/svt-av1.sh
        ./scripts/svt-av1.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: svt-av1*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: svt-av1.tar.xz

  uavs3d:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/uavs3d.sh
        ./scripts/uavs3d.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: uavs3d*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: uavs3d.tar.xz

  uchardet:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/uchardet.sh
        ./scripts/uchardet.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: uchardet*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: uchardet.tar.xz

  util-macros:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/util-macros.sh
        ./scripts/util-macros.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: util-macros*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: util-macros.tar.xz

  vulkan:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Setup GNU BASH
      run: brew install bash
    - name: Build
      run: |
        chmod +x ./scripts/vulkan.sh
        ./scripts/vulkan.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: vulkan*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: vulkan.tar.xz

  vvdec:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/vvdec.sh
        ./scripts/vvdec.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: vvdec*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: vvdec.tar.xz

  x264:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/x264.sh
        ./scripts/x264.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: x264*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: x264.tar.xz

  x265:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/x265.sh
        ./scripts/x265.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: x265*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: x265.tar.xz

  xcb-proto:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/xcb-proto.sh
        ./scripts/xcb-proto.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: xcb-proto*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: xcb-proto.tar.xz

  xorgproto:
    needs: [util-macros]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        mkdir workspace
        tar xvf util-macros.tar.xz -C workspace 2>/dev/null >/dev/null
        chmod +x ./scripts/xorgproto.sh
        ./scripts/xorgproto.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: xorgproto*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: xorgproto.tar.xz

  xtrans:
    needs: [util-macros, xorgproto]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/util-macros.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xorgproto.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/xtrans.sh
        ./scripts/xtrans.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: xtrans*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: xtrans.tar.xz

  xvid:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/xvid.sh
        ./scripts/xvid.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: xvid*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: xvid.tar.xz

  xz:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/xz.sh
        ./scripts/xz.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: xz*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: xz.tar.xz

  zimg:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/zimg.sh
        ./scripts/zimg.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: zimg*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: zimg.tar.xz

  zlib:
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        chmod +x ./scripts/zlib.sh
        ./scripts/zlib.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: zlib*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: zlib.tar.xz

  zstd:
    needs: [lz4, xz, zlib]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/lz4.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/xz.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/zstd.sh
        ./scripts/zstd.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: zstd*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: zstd.tar.xz

  zvbi:
    needs: [libpng, gettext]
    runs-on: ${{ inputs.os }}
    env:
      ARCHS: ${{ inputs.arch }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:   
    - name: Checkout
      uses: actions/checkout@main
    - name: Setting tools arch
      id: tools-arch
      run: echo "t_arch=$(uname -m)" >> $GITHUB_ENV
    - name: Loading tools-${{ env.t_arch }} cache
      uses: actions/cache@main
      with:
        path: ${{ github.workspace }}/tools
        key: tools-${{ env.t_arch }}
    - name: Switch to Xcode 15.2
      run: |
        sudo xcode-select --reset
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer  
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/gettext.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libiconv.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libpng.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/libxml2.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev-$ARCHS/zlib.tar.xz
        mkdir workspace
        for f in *.xz; do tar xvf "$f" -C workspace 2>/dev/null >/dev/null; done
        chmod +x ./scripts/zvbi.sh
        ./scripts/zvbi.sh
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev-${{ inputs.arch }}
        assets: zvbi*.xz
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      continue-on-error: true
      uses: softprops/action-gh-release@v2
      with:
        tag_name: dev-${{ inputs.arch }}
        name: dev-${{ inputs.arch }}
        files: zvbi.tar.xz
